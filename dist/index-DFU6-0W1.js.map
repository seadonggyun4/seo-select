{"version":3,"file":"index-DFU6-0W1.js","sources":["../src/core/InteractiveVirtualSelect.ts","../src/constants/constants.ts","../src/event/SeoSelectEvent.ts","../src/event/eventHelpers.ts","../src/event/eventTypes.ts","../src/components/seo-select/index.ts"],"sourcesContent":["interface OptionData {\n  value: string;\n  label: string;\n  [key: string]: any;\n}\n\ninterface InteractiveVirtualSelectOptions {\n  rowHeight?: number;\n  overscan?: number;\n  renderOption?: ((element: HTMLElement, option: OptionData) => void) | null;\n  onClick?: ((option: OptionData, index: number, event: Event) => void) | null;\n  onEscape?: (() => void) | null;\n  isMultiple?: boolean;\n}\n\nexport class InteractiveVirtualSelect {\n  static activeInstance: InteractiveVirtualSelect | null = null;\n\n  private container: HTMLElement;\n  private data: OptionData[];\n  private rowHeight: number;\n  private overscan: number;\n  private renderOption: ((element: HTMLElement, option: OptionData) => void) | null;\n  private onClick: ((option: OptionData, index: number, event: Event) => void) | null;\n  private onEscape: (() => void) | null;\n  private isMultiple: boolean;\n\n  private total: number;\n  private focusedIndex: number;\n  private activeIndex: number;\n  private _prevStart: number;\n  private _prevEnd: number;\n  private pool: HTMLElement[];\n\n  private wrapper!: HTMLElement;\n  private topPad!: HTMLElement;\n  private botPad!: HTMLElement;\n  private visibleCount!: number;\n  private poolSize!: number;\n\n  private _ticking: boolean = false;\n  private _prevStartIdx: number = -1;\n  private _onScroll!: () => void;\n\n  constructor(container: HTMLElement, data: OptionData[], options: InteractiveVirtualSelectOptions = {}) {\n    this.container = container;\n    this.data = data;\n    this.rowHeight = options.rowHeight || 36;\n    this.overscan = options.overscan || 20;\n    this.renderOption = options.renderOption || null;\n    this.onClick = options.onClick || null;\n    this.onEscape = options.onEscape || null;\n    this.isMultiple = options.isMultiple || false;\n\n    this.total = data.length;\n    this.focusedIndex = -1;\n    this.activeIndex = -1;\n    this._prevStart = -1;\n    this._prevEnd = -1;\n    this.pool = [];\n\n    this._ensureWrapper();\n    this._buildDOM();\n\n    requestAnimationFrame(() => {\n      this._initializeContainer();\n      this._buildPool();\n      this._bindScroll();\n\n      if (InteractiveVirtualSelect.activeInstance && InteractiveVirtualSelect.activeInstance !== this) {\n        InteractiveVirtualSelect.activeInstance.deactivate();\n      }\n\n      InteractiveVirtualSelect.activeInstance = this;\n      this.render();\n    });\n  }\n\n  // 활성화 해제: 모든 하이라이트 클래스 제거\n  deactivate(): void {\n    this.pool.forEach(this._resetClass);\n  }\n\n  // 주어진 인덱스로 스크롤 이동 및 렌더링\n  renderToIndex(index: number): void {\n    const clamped = Math.max(0, Math.min(index, this.total - 1));\n    const halfVisible = Math.floor(this.visibleCount / 2);\n    const startIdx = Math.max(0, clamped - halfVisible);\n    const scrollTop = startIdx * this.rowHeight;\n\n    // 너무 자주 조정되지 않도록 오차 허용\n    if (Math.abs(this.container.scrollTop - scrollTop) > 1) {\n      this.container.scrollTop = scrollTop;\n    }\n\n    this.render();\n  }\n\n  // wrapper 엘리먼트를 보장\n  private _ensureWrapper(): void {\n    this.wrapper = this.container.querySelector('.option-wrapper') as HTMLElement || document.createElement('div');\n    this.wrapper.className = 'option-wrapper';\n    if (!this.wrapper.parentElement) {\n      this.container.appendChild(this.wrapper);\n    }\n    this.wrapper.innerHTML = '';\n  }\n\n  // 가상 리스트용 padding 영역 생성\n  private _buildDOM(): void {\n    this.topPad = document.createElement('div');\n    this.topPad.className = 'virtual-placeholder top';\n    this.topPad.appendChild(document.createElement('div'));\n\n    this.botPad = document.createElement('div');\n    this.botPad.className = 'virtual-placeholder bottom';\n    this.botPad.appendChild(document.createElement('div'));\n\n    this.wrapper.append(this.topPad, this.botPad);\n  }\n\n  // 컨테이너 및 풀 크기 초기화\n  private _initializeContainer(extraHeight: number = 0): void {\n    const maxHeight = 360;\n    const computedHeight = this.total * this.rowHeight;\n    const finalHeight = this.total > 10 ? maxHeight : computedHeight;\n\n    this.container.style.height = `${finalHeight + 5 + extraHeight}px`;\n    this.visibleCount = Math.max(1, Math.ceil((finalHeight + extraHeight) / this.rowHeight));\n    this.poolSize = this.visibleCount + this.overscan * 2;\n    this.container.style.setProperty('--row-height', `${this.rowHeight}px`);\n    this.wrapper.style.height = `${this.total * this.rowHeight}px`;\n  }\n\n  // option 요소 풀 구성\n  private _buildPool(): void {\n    this.pool.forEach(el => el.remove());\n    this.pool = [];\n    const insertAfter = this.topPad.nextSibling;\n\n    for (let i = 0; i < this.poolSize; i++) {\n      const el = this._createOptionElement();\n      this.pool.push(el);\n      this.wrapper.insertBefore(el, insertAfter);\n    }\n  }\n\n  // 스크롤 이벤트 바인딩\n  private _bindScroll(): void {\n    this._ticking = false;\n    this._prevStartIdx = -1;\n\n    this._onScroll = () => {\n      if (!this._isVisible()) return;\n\n      const scrollTop = this.container.scrollTop;\n      const startIdx = Math.floor(scrollTop / this.rowHeight);\n\n      if (startIdx === this._prevStartIdx) return;\n      this._prevStartIdx = startIdx;\n\n      if (!this._ticking) {\n        this._ticking = true;\n        requestAnimationFrame(() => {\n          this.render();\n          this._ticking = false;\n        });\n      }\n    };\n\n    this.container.addEventListener('scroll', this._onScroll, { passive: true });\n  }\n\n  // 현재 표시 상태 여부 확인\n  private _isVisible(): boolean {\n    return this.container.offsetParent !== null && this.container.offsetHeight > 0;\n  }\n\n  // 가상 리스트 렌더링\n  render(): void {\n    const scrollTop = this.container.scrollTop;\n    const startIdx = Math.max(0, Math.floor(scrollTop / this.rowHeight) - this.overscan);\n    const endIdx = Math.min(this.total, startIdx + this.poolSize);\n    const sameRange = this._prevStart === startIdx && this._prevEnd === endIdx;\n\n    if (!sameRange) {\n      this._prevStart = startIdx;\n      this._prevEnd = endIdx;\n      this._setPlaceholders(startIdx, endIdx);\n      this._renderPool(startIdx);\n\n      requestAnimationFrame(() => {\n        const delta = Math.abs(this.container.scrollTop - scrollTop);\n        if (delta > 1) {\n          this.container.scrollTop = scrollTop;\n        }\n        this._applyHighlight();\n      });\n    }\n    this._applyHighlight();\n  }\n\n  // index로 활성화 설정\n  setActiveIndex(index: number): void {\n    if (index < 0 || index >= this.total) return;\n\n    // focusedIndex는 모든 모드에서 설정\n    this.focusedIndex = index;\n\n    // 단일 선택 모드일 때만 activeIndex 설정\n    if (!this.isMultiple) {\n      this.activeIndex = index;\n    }\n\n    this.renderToIndex(index);\n\n    // 즉시 하이라이트 적용\n    this._applyHighlight();\n  }\n\n  // padding 영역 설정\n  private _setPlaceholders(startIdx: number, endIdx: number): void {\n    const topPad = startIdx * this.rowHeight;\n    const botPad = (this.total - endIdx) * this.rowHeight;\n    this.container.style.setProperty('--top-placeholder', `${topPad}px`);\n    this.container.style.setProperty('--bottom-placeholder', `${botPad}px`);\n    (this.topPad.firstElementChild as HTMLElement).style.height = `${topPad}px`;\n    (this.botPad.firstElementChild as HTMLElement).style.height = `${botPad}px`;\n    this.wrapper.style.height = `${this.total * this.rowHeight}px`;\n  }\n\n  // 옵션 풀 재사용하여 렌더링\n  private _renderPool(startIdx: number): void {\n    for (let i = 0; i < this.pool.length; i++) {\n      const el = this.pool[i];\n      const dataIdx = startIdx + i;\n\n      if (dataIdx >= this.total) {\n        el.style.display = 'none';\n        el.removeAttribute('data-index');\n        continue;\n      }\n\n      const option = this.data[dataIdx];\n      el.style.display = '';\n      el.dataset.index = String(dataIdx);\n      if ((el as any)._value !== option.value) {\n        el.textContent = option.label;\n        (el as any)._value = option.value;\n      }\n      this._handleDisabledOption(el, option);\n      this._resetClass(el);\n\n      // renderOption 콜백 호출 (있다면)\n      if (this.renderOption) {\n        this.renderOption(el, option);\n      }\n\n      // multi 모드일 때는 active 클래스 강제 제거\n      if (this.isMultiple) {\n        el.classList.remove('active');\n      }\n    }\n  }\n\n  // 강조 클래스 적용 - multi 모드일 때는 active 클래스 제외\n  private _applyHighlight(): void {\n    for (const el of this.pool) {\n      const idx = parseInt(el.dataset.index || '-1', 10);\n      if (!Number.isFinite(idx)) continue;\n\n      // multi 모드가 아닐 때만 active 클래스 적용\n      if (!this.isMultiple) {\n        el.classList.toggle('active', idx === this.activeIndex);\n      }\n\n      el.classList.toggle('focused', idx === this.focusedIndex);\n    }\n  }\n\n  // 비활성 옵션 처리\n  private _handleDisabledOption(el: HTMLElement, opt: OptionData): void {\n    const isDisabled = opt?.value === 'no_match';\n    el.classList.toggle('disabled', isDisabled);\n    el.toggleAttribute('aria-disabled', isDisabled);\n    if (isDisabled) {\n      this.container.style.height = '80px';\n    }\n  }\n\n  // 강조 클래스 초기화\n  private _resetClass(el: HTMLElement): void {\n    el.classList.remove('active', 'focused');\n  }\n\n  // 옵션 엘리먼트 생성\n  private _createOptionElement(): HTMLElement {\n    const el = document.createElement('option');\n    el.className = 'option';\n    el.style.height = 'var(--row-height)';\n    el.addEventListener('click', (e) => this._handleClick(e, el));\n\n    el.addEventListener('mouseenter', () => {\n      const idx = parseInt(el.dataset.index || '-1', 10);\n      if (!Number.isFinite(idx)) return;\n      this.focusedIndex = idx;\n      this._applyHighlight();\n    });\n    return el;\n  }\n\n  // 클릭 이벤트 처리\n  private _handleClick(e: Event, el: HTMLElement): void {\n    const index = parseInt(el.dataset.index || '-1', 10);\n    const option = this.data[index];\n    if (option?.value === 'no_match') return;\n    this.onClick?.(option, index, e);\n\n    // 다중 선택 모드가 아닐 때만 activeIndex 설정\n    if (!this.isMultiple) {\n      this.activeIndex = index;\n    }\n\n    this.focusedIndex = index;\n    this._applyHighlight();\n  }\n\n  // 키보드 입력 처리\n  handleKeydown = (e: KeyboardEvent): void => {\n    switch (e.key) {\n      case 'Tab': {\n        e.preventDefault();\n\n        if (e.shiftKey) {\n          // Shift + Tab => 뒤로 이동\n          if (this.data[0]?.value === 'no_match') return;\n          this.setFocusedIndex(this.focusedIndex - 1);\n        } else {\n          // Tab 단독 => 앞으로 이동\n          const nextIndex = this.focusedIndex + 1;\n          if (this.data[nextIndex]?.value === 'no_match') return;\n          if (nextIndex >= this.total) {\n            const maxScrollTop = this.container.scrollHeight - this.container.clientHeight;\n            this.container.scrollTop = maxScrollTop;\n          } else {\n            this.setFocusedIndex(nextIndex);\n          }\n        }\n        break;\n      }\n      case 'ArrowDown': {\n        e.preventDefault();\n        const nextIndex = this.focusedIndex + 1;\n        if (this.data[nextIndex]?.value === 'no_match') return;\n        if (nextIndex >= this.total) {\n          const maxScrollTop = this.container.scrollHeight - this.container.clientHeight;\n          this.container.scrollTop = maxScrollTop;\n        } else {\n          this.setFocusedIndex(nextIndex);\n        }\n        break;\n      }\n      case 'ArrowUp':\n        e.preventDefault();\n        if (this.data[0]?.value === 'no_match') return;\n        this.setFocusedIndex(this.focusedIndex - 1);\n        break;\n      case 'Enter': {\n        e.preventDefault();\n        const opt = this.getFocusedOption();\n        if (opt) {\n          this.onClick?.(opt, this.focusedIndex, e);\n\n          if (!this.isMultiple) {\n            this.activeIndex = this.focusedIndex;\n          }\n\n          this._applyHighlight();\n        }\n        break;\n      }\n      case 'Escape':\n        e.preventDefault();\n        this.onEscape?.();\n        break;\n    }\n  };\n\n\n  // 포커스 인덱스 설정\n  setFocusedIndex(index: number): void {\n    this.focusedIndex = Math.max(0, Math.min(index, this.total - 1));\n    this.render();\n    this._scrollIntoView(this.focusedIndex);\n  }\n\n  // 포커스된 아이템이 보이도록 스크롤\n  private _scrollIntoView(index: number): void {\n    const offset = this.total > 10 ? 9 : this.total - 1;\n    const top = (index - offset) * this.rowHeight;\n    const minScroll = Math.max(0, top);\n    this.container.scrollTop = minScroll;\n  }\n\n  // 현재 포커스된 옵션 반환\n  getFocusedOption(): OptionData | null {\n    return this.focusedIndex >= 0 && this.focusedIndex < this.data.length\n      ? this.data[this.focusedIndex]\n      : null;\n  }\n\n  // 데이터 갱신 및 렌더링\n  setData(newData: OptionData[], activeValue?: string): void {\n    this.data = newData;\n    this.total = newData.length;\n    this._prevStart = -1;\n    this._prevEnd = -1;\n\n    const matchedIndex = activeValue != null && activeValue !== undefined\n      ? this.data.findIndex(opt => opt.value === activeValue)\n      : -1;\n\n    // 다중 선택 모드가 아닐 때만 activeIndex 설정\n    if (!this.isMultiple) {\n      this.activeIndex = matchedIndex >= 0 ? matchedIndex : 0;\n    }\n\n    this.focusedIndex = matchedIndex >= 0 ? matchedIndex : 0;\n    this.container.scrollTop = 0;\n\n    this._initializeContainer();\n    this._setPlaceholders(0, Math.min(this.total, this.pool.length));\n    this._renderPool(0);\n    this._applyHighlight();\n  }\n\n  // 파괴 및 이벤트 제거\n  destroy(): void {\n    this.container.removeEventListener('scroll', this._onScroll);\n    this.pool.forEach(el => el.remove());\n    this.wrapper.style.height = '0';\n    this.topPad?.remove();\n    this.botPad?.remove();\n    this.pool = [];\n    if (InteractiveVirtualSelect.activeInstance === this) {\n      InteractiveVirtualSelect.activeInstance = null;\n    }\n  }\n\n  // 외부에서 하이라이트를 적용할 수 있는 public 메서드\n  public applyHighlight(): void {\n    this._applyHighlight();\n  }\n\n  // 외부에서 activeIndex와 focusedIndex를 함께 설정하는 헬퍼 메서드\n  public setActiveAndFocusedIndex(index: number): void {\n    if (index < 0 || index >= this.total) return;\n    \n    this.focusedIndex = index;\n    if (!this.isMultiple) {\n      this.activeIndex = index;\n    }\n    this._applyHighlight();\n  }\n}","import { html } from 'lit';\n\n// 지원되는 언어 타입\nexport type SupportedLanguage = 'en' | 'ko' | 'ja' | 'zh';\n\n// 테마 타입\nexport type SelectTheme = 'basic' | 'float';\n\n// 기본 다국어 텍스트 인터페이스\nexport interface LocalizedTexts {\n  placeholder: string;\n  loadingText: string;\n  noDataText: string;\n  removeTag: string;\n  clearAll: string;\n  resetToDefault: string;\n  required: string;\n}\n\n// 검색 관련 다국어 텍스트 인터페이스\nexport interface SearchLocalizedTexts {\n  searchPlaceholder: string;\n  noMatchText: string;\n}\n\n// 기본 다국어 텍스트 상수\nexport const LOCALIZED_TEXTS: Record<SupportedLanguage, LocalizedTexts> = {\n  en: {\n    placeholder: 'Please select',\n    loadingText: 'Loading options...',\n    noDataText: 'No data available',\n    removeTag: 'Remove',\n    clearAll: 'Clear all',\n    resetToDefault: 'Reset to default',\n    required: 'This field is required.'\n  },\n  ko: {\n    placeholder: '선택해주세요',\n    loadingText: '옵션 로딩 중...',\n    noDataText: '데이터 없음',\n    removeTag: '제거',\n    clearAll: '모두 지우기',\n    resetToDefault: '기본값으로 되돌리기',\n    required: '필수 항목입니다.'\n  },\n  ja: {\n    placeholder: '選択してください',\n    loadingText: 'オプションを読み込み中...',\n    noDataText: 'データがありません',\n    removeTag: '削除',\n    clearAll: 'すべてクリア',\n    resetToDefault: 'デフォルトに戻す',\n    required: 'この項目は必須です。'\n  },\n  zh: {\n    placeholder: '请选择',\n    loadingText: '正在加载选项...',\n    noDataText: '无数据',\n    removeTag: '移除',\n    clearAll: '清除全部',\n    resetToDefault: '恢复默认',\n    required: '此项为必填项。'\n  }\n};\n\n// 검색 관련 다국어 텍스트 상수\nexport const SEARCH_LOCALIZED_TEXTS: Record<SupportedLanguage, SearchLocalizedTexts> = {\n  en: {\n    searchPlaceholder: 'Search...',\n    noMatchText: 'No matching data found.',\n  },\n  ko: {\n    searchPlaceholder: '검색하세요',\n    noMatchText: '데이터가 없습니다.',\n  },\n  ja: {\n    searchPlaceholder: '検索してください',\n    noMatchText: '一致するデータがありません。',\n  },\n  zh: {\n    searchPlaceholder: '请搜索',\n    noMatchText: '未找到匹配数据。',\n  }\n};\n\n// 지원되는 언어 목록\nexport const SUPPORTED_LANGUAGES: SupportedLanguage[] = ['en', 'ko', 'ja', 'zh'];\n\n// 기본 설정값\nexport const DEFAULT_CONFIG = {\n  language: 'en' as SupportedLanguage,\n  theme: 'float' as SelectTheme,\n  height: '100%',\n  showReset: true,\n  multiple: false,\n  dark: false,\n  required: false,\n} as const;\n\n// 이벤트 이름 상수\nexport const EVENT_NAMES = {\n  SELECT_OPEN: 'onOpen',\n  SELECT: 'onSelect',\n  DESELECT: 'onDeselect',\n  RESET: 'onReset',\n  CHANGE: 'onChange',\n} as const;\n\n// CSS 클래스 상수\nexport const CSS_CLASSES = {\n  SELECT: 'seo-select',\n  MULTI_SELECT: 'multi-select',\n  OPEN: 'open',\n  HIDDEN: 'hidden',\n  SELECTED_CONTAINER: 'selected-container',\n  SELECTED_TAGS: 'selected-tags',\n  TAG: 'tag',\n  TAG_REMOVE: 'tag-remove',\n  PLACEHOLDER: 'placeholder',\n  ARROW: 'arrow',\n  LISTBOX: 'seo-select-listbox',\n  SCROLL: 'seo-select-scroll',\n  LOADING_CONTAINER: 'loading-container',\n  LOADING_DOTS: 'loading-dots',\n  LOADING_TEXT: 'loading-text',\n  NO_DATA_CONTAINER: 'no-data-container',\n  NO_DATA_TEXT: 'no-data-text',\n  SEARCH_INPUT: 'select-search-input',\n  SEARCH_ICON: 'search-icon',\n  WITH_RESET: 'with-reset',\n  RESET_BUTTON: 'reset-button',\n  MULTI_RESET_BUTTON: 'multi-reset-button',\n  SELECTED: 'selected',\n  CHECK_MARK: 'check-mark',\n  DOT: 'dot',\n} as const;\n\n// 타이밍 상수\nexport const TIMING = {\n  LOADING_MIN: 500,\n  LOADING_MAX: 1500,\n  SELECT_DELAY: 0,\n} as const;\n\n\n// 아이콘 SVG 상수 (Lit TemplateResult로 반환)\nexport const ICONS = {\n  CLOSE: () => html`\n    <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M9 3L3 9M3 3L9 9\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n  `,\n  \n  CHEVRON_DOWN: () => html`\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M4 6L8 10L12 6\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n  `,\n  \n  CHEVRON_UP: () => html`\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M12 10L8 6L4 10\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n  `,\n  \n  SEARCH: () => html`\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M7.33333 12.6667C10.2789 12.6667 12.6667 10.2789 12.6667 7.33333C12.6667 4.38781 10.2789 2 7.33333 2C4.38781 2 2 4.38781 2 7.33333C2 10.2789 4.38781 12.6667 7.33333 12.6667Z\" stroke=\"currentColor\" stroke-width=\"1.33333\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      <path d=\"M14 14L11.1 11.1\" stroke=\"currentColor\" stroke-width=\"1.33333\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n  `\n} as const;","import { EVENT_NAMES } from '../constants/constants.js';\n\nexport class SeoSelectEvent extends Event {\n  public readonly label: string;\n  public readonly value: string;\n\n  constructor(eventType: string, label: string, value: string) {\n    super(eventType, { bubbles: true, composed: true });\n    this.label = label;\n    this.value = value;\n  }\n}\n\nexport class SeoDeselectEvent extends Event {\n  public readonly label: string;\n  public readonly value: string;\n\n  constructor(label: string, value: string) {\n    super(EVENT_NAMES.DESELECT, { bubbles: true, composed: true });\n    this.label = label;\n    this.value = value;\n  }\n}\n\nexport class SeoResetEvent extends Event {\n  public readonly label?: string;\n  public readonly value?: string;\n  public readonly labels?: string[];\n  public readonly values?: string[];\n\n  constructor(data: { \n    label?: string; \n    value?: string; \n    labels?: string[]; \n    values?: string[] \n  }) {\n    super(EVENT_NAMES.RESET, { bubbles: true, composed: true });\n    this.label = data.label;\n    this.value = data.value;\n    this.labels = data.labels;\n    this.values = data.values;\n  }\n}\n\nexport class SeoChangeEvent extends Event {\n  constructor() {\n    super(EVENT_NAMES.CHANGE, { bubbles: true, composed: true });\n  }\n}\n\nexport class SeoOpenEvent extends Event {\n  public readonly selectInstance: any;\n\n  constructor(selectInstance: any) {\n    super(EVENT_NAMES.SELECT_OPEN, { bubbles: true, composed: true });\n    this.selectInstance = selectInstance;\n  }\n}","    import { \n  SeoSelectEvent, \n  SeoDeselectEvent, \n  SeoResetEvent, \n  SeoChangeEvent,\n  SeoOpenEvent\n} from './SeoSelectEvent.js';\nimport { EVENT_NAMES } from '../constants/constants.js';\n\n/**\n * 선택 이벤트 발생 헬퍼\n */\nexport function triggerSelectEvent(element: HTMLElement, label: string, value: string): void {\n  const event = new SeoSelectEvent(EVENT_NAMES.SELECT, label, value);\n  element.dispatchEvent(event);\n}\n\n/**\n * 선택 해제 이벤트 발생 헬퍼\n */\nexport function triggerDeselectEvent(element: HTMLElement, label: string, value: string): void {\n  const event = new SeoDeselectEvent(label, value);\n  element.dispatchEvent(event);\n}\n\n/**\n * 리셋 이벤트 발생 헬퍼\n */\nexport function triggerResetEvent(\n  element: HTMLElement, \n  data: { \n    label?: string; \n    value?: string; \n    labels?: string[]; \n    values?: string[] \n  }\n): void {\n  const event = new SeoResetEvent(data);\n  element.dispatchEvent(event);\n}\n\n/**\n * 변경 이벤트 발생 헬퍼\n */\nexport function triggerChangeEvent(element: HTMLElement): void {\n  const event = new SeoChangeEvent();\n  element.dispatchEvent(event);\n}\n\n/**\n * 드롭다운 열기 이벤트 발생 헬퍼 (내부용)\n */\nexport function triggerOpenEvent(selectInstance: any): void {\n  const event = new SeoOpenEvent(selectInstance);\n  window.dispatchEvent(event);\n}\n\n/**\n * 모든 이벤트 헬퍼 함수를 한번에 export\n */\nexport const SeoSelectEventHelpers = {\n  triggerSelectEvent,\n  triggerDeselectEvent,\n  triggerResetEvent,\n  triggerChangeEvent,\n  triggerOpenEvent,\n} as const;","import { EVENT_NAMES } from '../constants/constants.js';\n\nexport interface ResetEventData {\n  label?: string;\n  value?: string;\n  labels?: string[];\n  values?: string[];\n}\n\nexport const SeoSelectEvents = {\n  SELECT: EVENT_NAMES.SELECT,\n  DESELECT: EVENT_NAMES.DESELECT,\n  RESET: EVENT_NAMES.RESET,\n  CHANGE: EVENT_NAMES.CHANGE,\n  SELECT_OPEN: EVENT_NAMES.SELECT_OPEN,\n} as const;\n\nexport type SeoSelectEventType = typeof SeoSelectEvents[keyof typeof SeoSelectEvents];\n\n// 표준 addEventListener에서 사용할 수 있는 타입 정의\ndeclare global {\n  interface HTMLElementEventMap {\n    [EVENT_NAMES.SELECT]: SeoSelectEvent;\n    [EVENT_NAMES.DESELECT]: SeoDeselectEvent;\n    [EVENT_NAMES.RESET]: SeoResetEvent;\n    [EVENT_NAMES.CHANGE]: SeoChangeEvent;\n    [EVENT_NAMES.SELECT_OPEN]: SeoOpenEvent;\n  }\n}\n\n// 커스텀 이벤트 클래스들을 import해서 타입 확장\nimport { \n  SeoSelectEvent, \n  SeoDeselectEvent, \n  SeoResetEvent, \n  SeoChangeEvent, \n  SeoOpenEvent \n} from './SeoSelectEvent.js';","import { LitElement, html } from 'lit';\nimport { InteractiveVirtualSelect } from '../../core/InteractiveVirtualSelect.js';\nimport '../../styles/components/style.scss';\nimport {\n  SupportedLanguage,\n  SelectTheme,\n  LocalizedTexts,\n  LOCALIZED_TEXTS,\n  SUPPORTED_LANGUAGES,\n  DEFAULT_CONFIG,\n  EVENT_NAMES,\n  CSS_CLASSES,\n  TIMING,\n  ICONS\n} from '../../constants/constants.js';\nimport {\n  triggerSelectEvent,\n  triggerDeselectEvent,\n  triggerResetEvent,\n  triggerChangeEvent,\n  triggerOpenEvent,\n  SeoSelectEventListener\n} from '../../event/index.js';\n\ninterface VirtualSelectOption {\n  value: string;\n  label: string;\n}\n\n// 글로벌 타입 확장 - HTMLElementEventMap에 커스텀 이벤트 추가\ndeclare global {\n  interface HTMLElementEventMap {\n    [EVENT_NAMES.SELECT]: import('../../event/SeoSelectEvent.js').SeoSelectEvent;\n    [EVENT_NAMES.DESELECT]: import('../../event/SeoSelectEvent.js').SeoDeselectEvent;\n    [EVENT_NAMES.RESET]: import('../../event/SeoSelectEvent.js').SeoResetEvent;\n    [EVENT_NAMES.CHANGE]: import('../../event/SeoSelectEvent.js').SeoChangeEvent;\n    [EVENT_NAMES.SELECT_OPEN]: import('../../event/SeoSelectEvent.js').SeoOpenEvent;\n  }\n}\n\nexport class SeoSelect extends LitElement {\n  static formAssociated = true;\n\n  static get properties() {\n    return {\n      id: { type: String },\n      name: { type: String },\n      required: { type: Boolean, reflect: true },\n      width: { type: String },\n      height: { type: String },\n      optionItems: { type: Array },\n      open: { type: Boolean, state: true },\n      _labelText: { type: String, state: true },\n      showReset: { type: Boolean },\n      multiple: { type: Boolean },\n      _selectedValues: { type: Array, state: true },\n      _isLoading: { type: Boolean, state: true },\n      theme: { type: String },\n      dark: { type: Boolean },\n      language: { type: String },\n      texts: { type: Object },\n      autoWidth: { type: Boolean },\n    };\n  }\n\n  declare id: string;\n  declare name: string;\n  declare required: boolean;\n  declare width: string | null;\n  declare height: string;\n  declare optionItems: VirtualSelectOption[];\n  declare showReset: boolean;\n  declare multiple: boolean;\n  declare theme: SelectTheme;\n  declare dark: boolean;\n  declare language: SupportedLanguage;\n  declare texts: Partial<LocalizedTexts>;\n  declare autoWidth: boolean;\n\n  declare open: boolean;\n  declare _labelText: string;\n  declare _selectedValues: string[];\n  declare _isLoading: boolean;\n\n  declare _value: string | null;\n  declare _initialValue: string | null;\n  declare _initialLabel: string | null;\n  declare _virtual: InteractiveVirtualSelect | null;\n  declare _options: HTMLOptionElement[];\n  declare _internals: ElementInternals;\n  declare _pendingActiveIndex: number | null;\n  declare _calculatedWidth: string | null;\n\n  // 최적화를 위한 캐시 및 플래그\n  public _optionsCache: Map<string, HTMLOptionElement> = new Map();\n  private _localizedTextCache: LocalizedTexts | null = null;\n  private _lastLanguage: string = '';\n  private _lastTextsHash: string = '';\n  private _widthCalculationCache: Map<string, number> = new Map();\n  private _isUpdating: boolean = false;\n  private _updateDebounceTimer: ReturnType<typeof setTimeout> | null = null;\n\n  private _handleKeydownBound: (e: KeyboardEvent) => void;\n\n  constructor() {\n    super();\n    this._internals = this.attachInternals();\n    this._value = null;\n    this._initialValue = null;\n    this._initialLabel = null;\n    this._virtual = null;\n    this._options = [];\n    this.width = null;\n    this.required = DEFAULT_CONFIG.required;\n    this.optionItems = [];\n    this.open = false;\n    this._labelText = '';\n    this.showReset = DEFAULT_CONFIG.showReset;\n    this.multiple = DEFAULT_CONFIG.multiple;\n    this._selectedValues = [];\n    this._isLoading = false;\n    this.theme = DEFAULT_CONFIG.theme;\n    this.dark = DEFAULT_CONFIG.dark;\n    this.language = DEFAULT_CONFIG.language;\n    this.texts = {};\n    this.autoWidth = false;\n    this._calculatedWidth = null;\n    this._handleKeydownBound = (e: KeyboardEvent) => this._virtual?.handleKeydown(e);\n    this.tabIndex = 0;\n    this._pendingActiveIndex = null;\n  }\n\n  /**\n   * @deprecated 표준 addEventListener를 사용하세요\n   */\n  public addSeoSelectEventListener<T extends keyof HTMLElementEventMap>(\n    type: T,\n    listener: SeoSelectEventListener<T>,\n    options?: AddEventListenerOptions\n  ): void {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(`addSeoSelectEventListener is deprecated. Use standard addEventListener instead:\nBefore: select.addSeoSelectEventListener('${type}', handler);\nAfter:  select.addEventListener('${type}', handler);`);\n    }\n    this.addEventListener(type, listener as EventListener, options);\n  }\n\n  /**\n   * @deprecated 표준 removeEventListener를 사용하세요\n   */\n  public removeSeoSelectEventListener<T extends keyof HTMLElementEventMap>(\n    type: T,\n    listener: SeoSelectEventListener<T>,\n    options?: EventListenerOptions\n  ): void {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(`removeSeoSelectEventListener is deprecated. Use standard removeEventListener instead:\nBefore: select.removeSeoSelectEventListener('${type}', handler);\nAfter:  select.removeEventListener('${type}', handler);`);\n    }\n    this.removeEventListener(type, listener as EventListener, options);\n  }\n\n  // 최적화된 getLocalizedText - 캐싱 적용\n  public getLocalizedText(): LocalizedTexts {\n    const textsHash = JSON.stringify(this.texts);\n    \n    if (this._localizedTextCache && \n        this._lastLanguage === this.language && \n        this._lastTextsHash === textsHash) {\n      return this._localizedTextCache;\n    }\n\n    const baseTexts = LOCALIZED_TEXTS[this.language] || LOCALIZED_TEXTS.en;\n    this._localizedTextCache = {\n      ...baseTexts,\n      ...this.texts\n    };\n    this._lastLanguage = this.language;\n    this._lastTextsHash = textsHash;\n\n    return this._localizedTextCache;\n  }\n\n  createRenderRoot() {\n    return this;\n  }\n\n  connectedCallback(): void {\n    this.style.width =  this.width !== '100%' ? '' : '100%';\n    super.connectedCallback();\n    this.initializeOptionsFromPropsOrSlot();\n    window.addEventListener(EVENT_NAMES.SELECT_OPEN, this.onOtherSelectOpened);\n    window.addEventListener('click', this.handleOutsideClick, true);\n    this.addEventListener('keydown', this._handleKeydownBound);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    window.removeEventListener(EVENT_NAMES.SELECT_OPEN, this.onOtherSelectOpened);\n    window.removeEventListener('click', this.handleOutsideClick);\n    this.removeEventListener('keydown', this._handleKeydownBound);\n    this._virtual?.destroy();\n    this._virtual = null;\n\n    // 캐시 정리\n    this._optionsCache.clear();\n    this._widthCalculationCache.clear();\n    this._localizedTextCache = null;\n\n    if (this._updateDebounceTimer) {\n      clearTimeout(this._updateDebounceTimer);\n    }\n\n    if (this.multiple) {\n      this._selectedValues = [];\n    } else {\n      this.value = '';\n    }\n  }\n\n  // 디바운스된 업데이트 메서드\n  public _debouncedUpdate(): void {\n    if (this._updateDebounceTimer) {\n      clearTimeout(this._updateDebounceTimer);\n    }\n    \n    this._updateDebounceTimer = setTimeout(() => {\n      this.requestUpdate();\n      this._updateDebounceTimer = null;\n    }, 16) as ReturnType<typeof setTimeout>; // ~60fps\n  }\n\n  updated(changed: Map<string, unknown>) {\n    if (this._isUpdating) return;\n    this.style.width =  this.width !== '100%' ? '' : '100%';\n    \n    const needsOptionsUpdate = changed.has('optionItems') || \n                              changed.has('language') || \n                              changed.has('texts');\n    \n    const needsWidthUpdate = changed.has('width') || \n                            changed.has('optionItems') || \n                            changed.has('_options');\n\n    if (needsOptionsUpdate) {\n      this.initializeOptionsFromPropsOrSlot();\n    }\n    \n    if (needsWidthUpdate) {\n      this.calculateAutoWidth();\n    }\n  }\n\n  // 최적화된 자동 너비 계산 - 캐싱 및 배치 처리\n  public calculateAutoWidth(): void {\n    if (this.width || this._options.length === 0) {\n      this._calculatedWidth = null;\n      return;\n    }\n\n    // 캐시 키 생성\n    const optionTexts = this._options.map(opt => opt.textContent || '');\n    const cacheKey = optionTexts.join('|') + `|${this.multiple}`;\n    \n    if (this._widthCalculationCache.has(cacheKey)) {\n      const cachedWidth = this._widthCalculationCache.get(cacheKey)!;\n      this._calculatedWidth = `${cachedWidth}px`;\n      return;\n    }\n\n    // requestAnimationFrame으로 배치 처리\n    requestAnimationFrame(() => {\n      const texts = this.getLocalizedText();\n      const textsToMeasure = [...optionTexts];\n      \n      if (this.multiple) {\n        textsToMeasure.push(texts.placeholder);\n      }\n\n      const computedStyle = window.getComputedStyle(this);\n      const font = `${computedStyle.fontSize} ${computedStyle.fontFamily}`;\n      \n      const maxTextWidth = this.getMaxOptionWidth(textsToMeasure, font);\n      const additionalSpace = this.multiple ? 120 : 80;\n      const totalWidth = Math.max(maxTextWidth + additionalSpace, 150);\n      \n      // 캐시에 저장\n      this._widthCalculationCache.set(cacheKey, totalWidth);\n      this._calculatedWidth = `${totalWidth}px`;\n      \n      // 필요한 경우에만 업데이트\n      if (this.isConnected) {\n        this._debouncedUpdate();\n      }\n    });\n  }\n\n  public getEffectiveWidth(): string {\n    if (this.width) {\n      return this.width;\n    }\n    if (!this.width && this._calculatedWidth) {\n      return this._calculatedWidth;\n    }\n    return 'auto';\n  }\n\n  protected getCloseIcon() {\n    return ICONS.CLOSE();\n  }\n\n  protected getChevronDownIcon() {\n    return ICONS.CHEVRON_DOWN();\n  }\n\n  protected getChevronUpIcon() {\n    return ICONS.CHEVRON_UP();\n  }\n\n  protected renderLoadingSpinner() {\n    const texts = this.getLocalizedText();\n    return html`\n      <div class=\"${CSS_CLASSES.LOADING_CONTAINER}\">\n        <div class=\"${CSS_CLASSES.LOADING_DOTS}\">\n          <div class=\"${CSS_CLASSES.DOT}\"></div>\n          <div class=\"${CSS_CLASSES.DOT}\"></div>\n          <div class=\"${CSS_CLASSES.DOT}\"></div>\n        </div>  \n        <span class=\"${CSS_CLASSES.LOADING_TEXT}\">${texts.loadingText}</span>\n      </div>\n    `;\n  }\n\n  protected renderNoData() {\n    const texts = this.getLocalizedText();\n    return html`\n      <div class=\"${CSS_CLASSES.NO_DATA_CONTAINER}\">\n        <span class=\"${CSS_CLASSES.NO_DATA_TEXT}\">${texts.noDataText}</span>\n      </div>\n    `;\n  }\n\n  protected renderDropdown() {\n    const hasOptions = this.getAllOptionData().length > 0;\n    const showNoData = this.multiple && !this._isLoading && !hasOptions;\n    const effectiveWidth = this.getEffectiveWidth();\n\n    return html`\n      <div class=\"${CSS_CLASSES.LISTBOX} ${CSS_CLASSES.SCROLL} ${this.open ? '' : CSS_CLASSES.HIDDEN}\" role=\"listbox\" style=\"width: ${effectiveWidth};\">\n        ${this._isLoading\n          ? this.renderLoadingSpinner()\n          : showNoData\n            ? this.renderNoData()\n            : ''\n        }\n      </div>\n    `;\n  }\n\n  protected getThemeClass(): string {\n    const themeClass = `theme-${this.theme}`;\n    const darkClass = this.dark ? 'dark' : '';\n    return `${themeClass} ${darkClass}`.trim();\n  }\n\n  render() {\n    if (this.multiple) {\n      return this.renderMultiSelect();\n    } else {\n      return this.renderSingleSelect();\n    }\n  }\n\n  protected renderMultiSelect() {\n    const texts = this.getLocalizedText();\n    const showResetButton = this.showReset && this._selectedValues.length > 0;\n    const effectiveWidth = this.getEffectiveWidth();\n\n    return html`\n      <div class=\"${CSS_CLASSES.SELECT} ${CSS_CLASSES.MULTI_SELECT} ${this.getThemeClass()} ${this.open ? CSS_CLASSES.OPEN : ''}\" style=\"width: ${effectiveWidth};\">\n        <div class=\"${CSS_CLASSES.SELECTED_CONTAINER} ${showResetButton ? CSS_CLASSES.WITH_RESET : ''}\" @click=${this.toggleDropdown}>\n          <div class=\"${CSS_CLASSES.SELECTED_TAGS}\">\n            ${this._selectedValues.map(value => {\n              const option = this._optionsCache.get(value) || this._options.find(opt => opt.value === value);\n              const label = option?.textContent || value;\n              return html`\n                <span class=\"${CSS_CLASSES.TAG}\">\n                  ${label}\n                  <button\n                    type=\"button\"\n                    class=\"${CSS_CLASSES.TAG_REMOVE}\"\n                    @click=${(e: Event) => this.removeTag(e, value)}\n                    title=\"${texts.removeTag}\"\n                  >${this.getCloseIcon()}</button>\n                </span>\n              `;\n            })}\n            ${this._selectedValues.length === 0\n              ? html`<span class=\"${CSS_CLASSES.PLACEHOLDER}\">${texts.placeholder}</span>`\n              : ''\n            }\n          </div>\n          ${showResetButton\n            ? html`<button\n                type=\"button\"\n                class=\"${CSS_CLASSES.MULTI_RESET_BUTTON}\"\n                @click=${this.resetToDefault}\n                title=\"${texts.clearAll}\"\n              >${this.getCloseIcon()}</button>`\n            : ''\n          }\n          <span class=\"${CSS_CLASSES.ARROW}\">${this.open ? this.getChevronUpIcon() : this.getChevronDownIcon()}</span>\n        </div>\n        ${this.renderDropdown()}\n      </div>\n    `;\n  }\n\n  protected renderSingleSelect() {\n    const texts = this.getLocalizedText();\n    const firstOptionValue = this._options && this._options.length > 0 ? this._options[0].value : null;\n    const showResetButton = this.showReset &&\n                          this._value !== null &&\n                          firstOptionValue !== null &&\n                          this._value !== firstOptionValue;\n    const effectiveWidth = this.getEffectiveWidth();\n\n    return html`\n      <div class=\"${CSS_CLASSES.SELECT} ${this.getThemeClass()} ${this.open ? CSS_CLASSES.OPEN : ''}\" style=\"width: ${effectiveWidth};\">\n        <button type=\"button\" class=\"${CSS_CLASSES.SELECTED} ${showResetButton ? CSS_CLASSES.WITH_RESET : ''}\" @click=${this.toggleDropdown}>\n          ${this._labelText}\n          ${showResetButton\n            ? html`<button\n                type=\"button\"\n                class=\"${CSS_CLASSES.RESET_BUTTON}\"\n                @click=${this.resetToDefault}\n                title=\"${texts.resetToDefault}\"\n              >${this.getCloseIcon()}</button>`\n            : ''\n          }\n          <span class=\"${CSS_CLASSES.ARROW}\">${this.open ? this.getChevronUpIcon() : this.getChevronDownIcon()}</span>\n        </button>\n        ${this.renderDropdown()}\n      </div>\n    `;\n  }\n\n  public removeTag = (e: Event, valueToRemove: string): void => {\n    e.stopPropagation();\n    this._selectedValues = this._selectedValues.filter(value => value !== valueToRemove);\n    this.updateFormValue();\n\n    const option = this._optionsCache.get(valueToRemove) || this._options.find(opt => opt.value === valueToRemove);\n\n    if (this.open) {\n      this._virtual?.destroy();\n      this._virtual = null;\n\n      const optionData = this.getAllOptionData();\n      if (optionData.length > 0) {\n        const scrollEl = this.querySelector(`.${CSS_CLASSES.SCROLL}`) as HTMLDivElement;\n        if (scrollEl) {\n          this._virtual = this._createVirtualSelect(optionData, scrollEl);\n          requestAnimationFrame(() => {\n            this._virtual?.setActiveIndex(0);\n          });\n        }\n      }\n    }\n\n    // 표준 이벤트 발생\n    triggerDeselectEvent(this, option?.textContent || '', valueToRemove);\n\n    this._debouncedUpdate();\n  };\n\n  public resetToDefault = (e: Event): void => {\n    e.stopPropagation();\n\n    if (this.multiple) {\n      this._selectedValues = [];\n      this.updateFormValue();\n\n      if (this.open) {\n        this._virtual?.destroy();\n        this._virtual = null;\n\n        const scrollEl = this.querySelector(`.${CSS_CLASSES.SCROLL}`) as HTMLDivElement;\n        if (scrollEl) {\n          const optionData = this.getAllOptionData();\n          this._virtual = this._createVirtualSelect(optionData, scrollEl);\n          requestAnimationFrame(() => {\n            this._virtual?.setActiveIndex(0);\n          });\n        }\n      } else {\n        this._pendingActiveIndex = 0;\n      }\n\n      // 표준 이벤트 발생\n      triggerResetEvent(this, { values: [], labels: [] });\n    } else {\n      if (this._options.length > 0) {\n        const firstOption = this._options[0];\n        this.value = firstOption.value;\n        this._labelText = firstOption.textContent || '';\n\n        if (this.open && this._virtual) {\n          requestAnimationFrame(() => {\n            this._virtual?.setActiveIndex(0);\n            if (this._virtual) {\n              this._virtual.setActiveAndFocusedIndex(0);\n              this._virtual.applyHighlight();\n            }\n          });\n        } else {\n          this._pendingActiveIndex = 0;\n          \n          if (this._virtual) {\n            this._virtual.destroy();\n            this._virtual = null;\n          }\n        }\n\n        // 표준 이벤트 발생\n        triggerResetEvent(this, { value: firstOption.value, label: firstOption.textContent || '' });\n      }\n    }\n    \n    this._debouncedUpdate();\n  };\n\n  public toggleDropdown = (): void => {\n    if (this.open) this.closeDropdown();\n    else this.openDropdown();\n  };\n\n  public hasNoOptions(): boolean {\n    return this._options.length === 0;\n  }\n\n  // 최적화된 옵션 초기화 - 배치 처리 및 캐싱\n  public initializeOptionsFromPropsOrSlot(): void {\n    if (this._isUpdating) return;\n    this._isUpdating = true;\n\n    try {\n      // 기존 캐시 정리\n      this._optionsCache.clear();\n\n      const optionEls = Array.from(this.querySelectorAll('option')) as HTMLOptionElement[];\n\n      if (optionEls.length > 0) {\n        this._options = optionEls.map(opt => {\n          opt.hidden = true;\n          this._optionsCache.set(opt.value, opt);\n          return opt;\n        });\n      } else if (Array.isArray(this.optionItems) && this.optionItems.length > 0) {\n        // DocumentFragment를 사용하여 DOM 조작 최적화\n        const fragment = document.createDocumentFragment();\n        \n        this._options = this.optionItems.map(opt => {\n          const el = document.createElement('option');\n          el.value = opt.value;\n          el.textContent = opt.label;\n          el.hidden = true;\n          this._optionsCache.set(opt.value, el);\n          fragment.appendChild(el);\n          return el;\n        });\n        \n        // 한 번에 DOM에 추가\n        this.appendChild(fragment);\n      } else {\n        this._options = [];\n      }\n\n      if (this._options.length > 0) {\n        this._isLoading = false;\n      }\n\n      // 선택된 값 처리\n      if (this.multiple) {\n        const selectedOptions = this._options.filter(opt => opt.selected);\n        this._selectedValues = selectedOptions.map(opt => opt.value);\n      } else {\n        const selected = this._options.find(opt => opt.selected);\n        if (selected) {\n          this._setValue(selected.value, false);\n        } else if (this._options.length > 0) {\n          this._setValue(this._options[0].value, false);\n        }\n      }\n\n      if (this._options.length > 0) {\n        this._initialValue = this._options[0].value;\n        this._initialLabel = this._options[0].textContent || '';\n      }\n\n      // 너비 계산을 비동기로 처리\n      this.calculateAutoWidth();\n      \n    } finally {\n      this._isUpdating = false;\n      this._debouncedUpdate();\n    }\n  }\n\n  public openDropdown(): void {\n    // 표준 이벤트 발생\n    triggerOpenEvent(this);\n    this.open = true;\n    this._debouncedUpdate();\n\n    if (this.hasNoOptions()) {\n      this._isLoading = true;\n      this._debouncedUpdate();\n\n      this.loadOptionsAsync().then(() => {\n        this.initializeVirtualSelect();\n      }).catch(() => {\n        this._isLoading = false;\n        this._debouncedUpdate();\n      });\n    } else {\n      this.initializeVirtualSelect();\n    }\n  }\n\n  public closeDropdown(): void {\n    this.open = false;\n    this._debouncedUpdate();\n  }\n\n  protected initializeVirtualSelect(): void {\n    const scrollEl = this.querySelector(`.${CSS_CLASSES.SCROLL}`) as HTMLDivElement;\n    const optionData = this.getAllOptionData();\n\n    if (this.multiple && optionData.length === 0) {\n      return;\n    }\n\n    if (!this._virtual && scrollEl && !this._isLoading && optionData.length > 0) {\n      this._virtual = this._createVirtualSelect(optionData, scrollEl);\n\n      if (this.multiple) {\n        requestAnimationFrame(() => {\n          this._virtual?.setActiveIndex(0);\n        });\n      } else {\n        const selectedIndex = optionData.findIndex((opt) => opt.value === this._value);\n        requestAnimationFrame(() => {\n          this._virtual?.setActiveIndex(selectedIndex >= 0 ? selectedIndex : 0);\n        });\n      }\n    }\n  }\n\n  public async loadOptionsAsync(): Promise<void> {\n    return new Promise((resolve) => {\n      // 더 빠른 로딩을 위해 타이밍 최적화\n      const loadingTime = Math.min(\n        Math.random() * (TIMING.LOADING_MAX - TIMING.LOADING_MIN) + TIMING.LOADING_MIN,\n        500 // 최대 500ms로 제한\n      );\n      \n      setTimeout(() => {\n        resolve();\n      }, loadingTime);\n    });\n  }\n\n  public selectOption(value: string, label: string): void {\n    if (this.multiple) {\n      this._selectedValues = [...this._selectedValues, value];\n      this.updateFormValue();\n      this._debouncedUpdate();\n\n      this._virtual?.destroy();\n      this._virtual = null;\n\n      const scrollEl = this.querySelector(`.${CSS_CLASSES.SCROLL}`) as HTMLDivElement;\n      if (scrollEl) {\n        const optionData = this.getAllOptionData();\n        if (optionData.length > 0) {\n          this._virtual = this._createVirtualSelect(optionData, scrollEl);\n          requestAnimationFrame(() => {\n            this._virtual?.setActiveIndex(0);\n          });\n        }\n      }\n\n      // 표준 이벤트 발생\n      triggerSelectEvent(this, label, value);\n\n    } else {\n      this._labelText = label;\n      this._setValue(value);\n      this.closeDropdown();\n\n      // 표준 이벤트 발생\n      triggerSelectEvent(this, label, value);\n    }\n  }\n\n  protected updateFormValue(): void {\n    const texts = this.getLocalizedText();\n    \n    if (this.multiple) {\n      const formValue = this._selectedValues.join(',');\n      this._internals.setFormValue(formValue);\n\n      if (this.required && this._selectedValues.length === 0) {\n        this._internals.setValidity({ valueMissing: true }, texts.required);\n      } else {\n        this._internals.setValidity({});\n      }\n    }\n  }\n\n  public handleOutsideClick = async (e: MouseEvent) => {\n    const target = e.target as Node;\n    const box = this.querySelector(`.${CSS_CLASSES.SELECT}`) as HTMLDivElement;\n    if (box?.contains(target)) return;\n    if (!this.contains(target)) await this.closeDropdown();\n  };\n\n  public onOtherSelectOpened = (e: Event): void => {\n    const customEvent = e as CustomEvent;\n    if (customEvent.detail !== this && this.open) {\n      this.closeDropdown();\n    }\n  };\n\n  // 최적화된 텍스트 너비 측정 - 캐싱 적용\n  public getMaxOptionWidth(texts: string[], font: string): number {\n    const cacheKey = `${texts.join('|')}|${font}`;\n    \n    if (this._widthCalculationCache.has(cacheKey)) {\n      return this._widthCalculationCache.get(cacheKey)!;\n    }\n\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d')!;\n    ctx.font = font;\n    \n    const maxWidth = Math.max(...texts.map((t) => {\n      const width = ctx.measureText(t).width;\n      return width > 100 ? width : 100;\n    }));\n    \n    this._widthCalculationCache.set(cacheKey, maxWidth);\n    return maxWidth;\n  }\n\n  public getAllOptionData(): VirtualSelectOption[] {\n    if (this.multiple) {\n      return this._options\n        .filter((opt) => !this._selectedValues.includes(opt.value))\n        .map((opt) => ({\n          value: opt.value,\n          label: opt.textContent ?? '',\n        }));\n    } else {\n      return this._options.map((opt) => ({\n        value: opt.value,\n        label: opt.textContent ?? '',\n      }));\n    }\n  }\n\n  public _createVirtualSelect(options: VirtualSelectOption[], container: HTMLDivElement) {\n    return new InteractiveVirtualSelect(container, options, {\n      isMultiple: this.multiple,\n      renderOption: (el: HTMLElement, opt: VirtualSelectOption) => {\n        el.textContent = opt.label;\n\n        if (this.multiple) {\n          const isSelected = this._selectedValues.includes(opt.value);\n          el.classList.toggle(CSS_CLASSES.SELECTED, isSelected);\n          if (isSelected) {\n            el.innerHTML = `<span class=\"${CSS_CLASSES.CHECK_MARK}\">✓</span> ${opt.label}`;\n          }\n        }\n      },\n      onClick: (opt: VirtualSelectOption) => setTimeout(() => this.selectOption(opt.value, opt.label), TIMING.SELECT_DELAY),\n      onEscape: () => this.closeDropdown(),\n    });\n  }\n\n  public _setValue(newVal: string, emit: boolean = true): void {\n    if (this._value === newVal) return;\n\n    this._value = newVal;\n    const matched = this._optionsCache.get(newVal) || this._options.find((opt) => opt.value === newVal);\n    this._labelText = matched?.textContent ?? this._labelText ?? '';\n\n    this._internals.setFormValue(this._value || '');\n\n    const texts = this.getLocalizedText();\n    if (this.required && !this._value) {\n      this._internals.setValidity({ valueMissing: true }, texts.required);\n    } else {\n      this._internals.setValidity({});\n    }\n\n    this._debouncedUpdate();\n    \n    // 표준 이벤트 발생\n    if (emit) triggerChangeEvent(this);\n  }\n\n  get options(): HTMLOptionElement[] {\n    return this._options;\n  }\n\n  get selectedIndex(): number {\n    if (this.multiple) {\n      return -1;\n    }\n    return this._options.findIndex((opt) => opt.value === this._value);\n  }\n\n  get value(): string | null {\n    if (this.multiple) {\n      return this._selectedValues.join(',');\n    }\n    return this._value;\n  }\n\n  set value(newVal: string) {\n    if (this.multiple) {\n      this._selectedValues = newVal ? newVal.split(',').filter(v => v.trim()) : [];\n      this.updateFormValue();\n      this._debouncedUpdate();\n    } else {\n      this._setValue(newVal, true);\n    }\n  }\n\n  get defaultValue(): string | null {\n    return this._options.length > 0 ? this._options[0].value : null;\n  }\n\n  get selectedValues(): string[] {\n    return this.multiple ? [...this._selectedValues] : [];\n  }\n\n  set selectedValues(values: string[]) {\n    if (this.multiple) {\n      this._selectedValues = [...values];\n      this.updateFormValue();\n      this._debouncedUpdate();\n    }\n  }\n\n  public resetToDefaultValue(): void {\n    this.resetToDefault(new Event('reset'));\n  }\n\n  public setLanguage(language: SupportedLanguage): void {\n    this.language = language;\n    this._localizedTextCache = null; // 캐시 무효화\n    this._debouncedUpdate();\n  }\n\n  public setTexts(customTexts: Partial<LocalizedTexts>): void {\n    this.texts = { ...this.texts, ...customTexts };\n    this._localizedTextCache = null; // 캐시 무효화\n    this._debouncedUpdate();\n  }\n\n  public setAutoWidth(enabled: boolean): void {\n    this.autoWidth = enabled;\n    this.calculateAutoWidth();\n    this._debouncedUpdate();\n  }\n\n  // 대량 옵션 업데이트를 위한 배치 처리 메서드\n  public batchUpdateOptions(newOptions: VirtualSelectOption[]): void {\n    if (this._isUpdating) return;\n    \n    // 업데이트 중 플래그 설정\n    this._isUpdating = true;\n    \n    try {\n      // 기존 옵션 정리\n      this._options.forEach(opt => opt.remove());\n      this._options = [];\n      this._optionsCache.clear();\n      this._widthCalculationCache.clear();\n\n      // 새 옵션들을 DocumentFragment로 배치 생성\n      const fragment = document.createDocumentFragment();\n      \n      this._options = newOptions.map(opt => {\n        const el = document.createElement('option');\n        el.value = opt.value;\n        el.textContent = opt.label;\n        el.hidden = true;\n        this._optionsCache.set(opt.value, el);\n        fragment.appendChild(el);\n        return el;\n      });\n\n      // 한 번에 DOM에 추가\n      this.appendChild(fragment);\n\n      // 초기값 설정\n      if (this._options.length > 0) {\n        this._initialValue = this._options[0].value;\n        this._initialLabel = this._options[0].textContent || '';\n        this._isLoading = false;\n        \n        // 단일 선택 모드에서 기본값 설정\n        if (!this.multiple && !this._value) {\n          this._setValue(this._options[0].value, false);\n        }\n      }\n\n      // 너비 재계산\n      this.calculateAutoWidth();\n      \n    } finally {\n      this._isUpdating = false;\n      this._debouncedUpdate();\n    }\n  }\n\n  // 옵션 추가를 위한 최적화된 메서드\n  public addOption(option: VirtualSelectOption): void {\n    const el = document.createElement('option');\n    el.value = option.value;\n    el.textContent = option.label;\n    el.hidden = true;\n    \n    this._options.push(el);\n    this._optionsCache.set(option.value, el);\n    this.appendChild(el);\n    \n    // 캐시 무효화\n    this._widthCalculationCache.clear();\n    this.calculateAutoWidth();\n    this._debouncedUpdate();\n  }\n\n  // 옵션 제거를 위한 최적화된 메서드\n  public removeOption(value: string): void {\n    const index = this._options.findIndex(opt => opt.value === value);\n    if (index === -1) return;\n\n    const optionEl = this._options[index];\n    optionEl.remove();\n    this._options.splice(index, 1);\n    this._optionsCache.delete(value);\n    \n    // 선택된 값에서도 제거\n    if (this.multiple) {\n      this._selectedValues = this._selectedValues.filter(v => v !== value);\n      this.updateFormValue();\n    } else if (this._value === value) {\n      // 현재 선택된 값이 제거되면 첫 번째 옵션으로 변경\n      if (this._options.length > 0) {\n        this._setValue(this._options[0].value, true);\n      } else {\n        this._setValue('', true);\n      }\n    }\n    \n    // 캐시 무효화\n    this._widthCalculationCache.clear();\n    this.calculateAutoWidth();\n    this._debouncedUpdate();\n  }\n\n  // 옵션 검색을 위한 최적화된 메서드\n  public findOption(value: string): HTMLOptionElement | null {\n    return this._optionsCache.get(value) || null;\n  }\n\n  // 모든 옵션 클리어\n  public clearOptions(): void {\n    this._options.forEach(opt => opt.remove());\n    this._options = [];\n    this._optionsCache.clear();\n    this._widthCalculationCache.clear();\n    \n    if (this.multiple) {\n      this._selectedValues = [];\n      this.updateFormValue();\n    } else {\n      this._setValue('', true);\n    }\n    \n    this._debouncedUpdate();\n  }\n\n  // 성능 모니터링을 위한 메서드\n  public getPerformanceMetrics(): {\n    optionCount: number;\n    cacheSize: number;\n    isUpdating: boolean;\n    hasCalculatedWidth: boolean;\n  } {\n    return {\n      optionCount: this._options.length,\n      cacheSize: this._optionsCache.size,\n      isUpdating: this._isUpdating,\n      hasCalculatedWidth: this._calculatedWidth !== null\n    };\n  }\n\n  // 캐시 수동 정리 메서드\n  public clearCaches(): void {\n    this._optionsCache.clear();\n    this._widthCalculationCache.clear();\n    this._localizedTextCache = null;\n    this._lastLanguage = '';\n    this._lastTextsHash = '';\n  }\n\n  // 타입 안전한 이벤트 리스너 헬퍼 메서드들 (표준 addEventListener 권장)\n  public onSelect(handler: (event: HTMLElementEventMap[typeof EVENT_NAMES.SELECT]) => void): void {\n    this.addEventListener(EVENT_NAMES.SELECT, handler as EventListener);\n  }\n\n  /**\n   * 선택 해제 이벤트 리스너 추가 (타입 안전)\n   */\n  public onDeselect(handler: (event: HTMLElementEventMap[typeof EVENT_NAMES.DESELECT]) => void): void {\n    this.addEventListener(EVENT_NAMES.DESELECT, handler as EventListener);\n  }\n\n  /**\n   * 리셋 이벤트 리스너 추가 (타입 안전)\n   */\n  public onReset(handler: (event: HTMLElementEventMap[typeof EVENT_NAMES.RESET]) => void): void {\n    this.addEventListener(EVENT_NAMES.RESET, handler as EventListener);\n  }\n\n  /**\n   * 변경 이벤트 리스너 추가 (타입 안전)\n   */\n  public onChange(handler: (event: HTMLElementEventMap[typeof EVENT_NAMES.CHANGE]) => void): void {\n    this.addEventListener(EVENT_NAMES.CHANGE, handler as EventListener);\n  }\n\n  static getSupportedLanguages(): SupportedLanguage[] {\n    return SUPPORTED_LANGUAGES;\n  }\n\n  static getDefaultTexts(): Record<SupportedLanguage, LocalizedTexts> {\n    return LOCALIZED_TEXTS;\n  }\n}\n\nif (!customElements.get('seo-select')) {\n  customElements.define('seo-select', SeoSelect);\n}"],"names":["_InteractiveVirtualSelect","container","data","options","e","nextIndex","maxScrollTop","opt","index","clamped","halfVisible","scrollTop","extraHeight","computedHeight","finalHeight","el","insertAfter","i","startIdx","endIdx","topPad","botPad","dataIdx","option","idx","isDisabled","offset","top","minScroll","newData","activeValue","matchedIndex","InteractiveVirtualSelect","LOCALIZED_TEXTS","SEARCH_LOCALIZED_TEXTS","SUPPORTED_LANGUAGES","DEFAULT_CONFIG","EVENT_NAMES","CSS_CLASSES","TIMING","ICONS","html","SeoSelectEvent","eventType","label","value","SeoDeselectEvent","SeoResetEvent","SeoChangeEvent","SeoOpenEvent","selectInstance","triggerSelectEvent","element","event","triggerDeselectEvent","triggerResetEvent","triggerChangeEvent","triggerOpenEvent","_SeoSelect","LitElement","valueToRemove","optionData","scrollEl","firstOption","target","type","listener","textsHash","baseTexts","changed","needsOptionsUpdate","needsWidthUpdate","optionTexts","cacheKey","cachedWidth","texts","textsToMeasure","computedStyle","font","maxTextWidth","additionalSpace","totalWidth","hasOptions","showNoData","effectiveWidth","themeClass","darkClass","showResetButton","firstOptionValue","optionEls","fragment","selectedOptions","selected","selectedIndex","resolve","loadingTime","formValue","ctx","maxWidth","t","width","isSelected","newVal","emit","matched","v","values","language","customTexts","enabled","newOptions","handler","SeoSelect"],"mappings":"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"}